replicaCount: 2
namespace: paklog
image:
  repository: paklog/yard-management-system
  pullPolicy: IfNotPresent
  tag: latest
nameOverride: yard-management-system
fullnameOverride: yard-management-system
springProfile: prod
javaOpts: -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:InitialRAMPercentage=50.0
  -Djava.security.egd=file:/dev/./urandom
serviceAccount:
  create: true
  automountServiceAccountToken: true
  annotations: {}
  name: ''
podAnnotations:
  prometheus.io/scrape: 'true'
  prometheus.io/port: '8081'
  prometheus.io/path: /actuator/prometheus
podLabels:
  app.kubernetes.io/component: yard-management-system
  app.kubernetes.io/part-of: paklog-platform
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
service:
  type: ClusterIP
  port: 8094
  managementPort: 8081
  annotations: {}
ingress:
  enabled: false
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/rate-limit: '100'
  hosts:
  - host: yard-management-system.paklog.local
    paths:
    - path: /
      pathType: Prefix
  tls:
  - secretName: yard-management-system-tls
    hosts:
    - yard-management-system.paklog.local
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi
livenessProbe:
  enabled: true
  path: /actuator/health/liveness
  port: management
  scheme: HTTP
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
readinessProbe:
  enabled: true
  path: /actuator/health/readiness
  port: management
  scheme: HTTP
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
startupProbe:
  enabled: true
  path: /actuator/health/liveness
  port: management
  scheme: HTTP
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30
  successThreshold: 1
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max
podDisruptionBudget:
  enabled: true
  minAvailable: 1
serviceMonitor:
  enabled: true
  namespace: paklog
  labels:
    release: prometheus
  portName: management
  path: /actuator/prometheus
  interval: 30s
  scrapeTimeout: 10s
deployment:
  annotations: {}
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - yard-management-system
        topologyKey: kubernetes.io/hostname
terminationGracePeriodSeconds: 30
mongodb:
  enabled: true
  uri: mongodb://mongodb.paklog.svc.cluster.local:27017/yard_management_system
  existingSecret: paklog-mongodb-credentials
kafka:
  enabled: true
  bootstrapServers: kafka.paklog.svc.cluster.local:9092
  saslEnabled: false
observability:
  enabled: true
  otlp:
    endpoint: http://tempo.paklog.svc.cluster.local:4318/v1/traces
  loki:
    enabled: true
    url: http://loki.paklog.svc.cluster.local:3100
configMap:
  enabled: false
  data: {}
secrets:
  enabled: false
extraEnv: []
extraEnvFrom: []
volumes: []
volumeMounts: []
initContainers: []
labels: {}
